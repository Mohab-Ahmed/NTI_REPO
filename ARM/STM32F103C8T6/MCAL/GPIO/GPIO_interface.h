/*
 * GPIO_interface.h
 *
 *  Created on: Feb 3, 2021
 *      Author: mohab
 */

#ifndef GPIO_INTERFACE_H_
#define GPIO_INTERFACE_H_

/* GPIO PORT ENUM */
typedef enum{
	GPIO_ENUM_PORTA=0,
	GPIO_ENUM_PORTB,
	GPIO_ENUM_PORTC,
	GPIO_ENUM_TOTAL_PORTS
}GPIO_EnumPort_type;

/* GPIO PINS ENUM */
typedef enum{
	/* PORT A */
	GPIO_ENUM_PINA0=0,
	GPIO_ENUM_PINA1,
	GPIO_ENUM_PINA2,
	GPIO_ENUM_PINA3,
	GPIO_ENUM_PINA4,
	GPIO_ENUM_PINA5,
	GPIO_ENUM_PINA6,
	GPIO_ENUM_PINA7,
	GPIO_ENUM_PINA8,
	GPIO_ENUM_PINA9,
	GPIO_ENUM_PINA10,
	GPIO_ENUM_PINA11,
	GPIO_ENUM_PINA12,
	GPIO_ENUM_PINA13,
	GPIO_ENUM_PINA14,
	GPIO_ENUM_PINA15,
	/* PORT B */
	GPIO_ENUM_PINB0,
	GPIO_ENUM_PINB1,
	GPIO_ENUM_PINB2_WARNING,		/* Reset PIN */
	GPIO_ENUM_PINB3_WARNING,		/* Debug PIN */
	GPIO_ENUM_PINB4_WARNING,		/* Debug PIN */
	GPIO_ENUM_PINB5,
	GPIO_ENUM_PINB6,
	GPIO_ENUM_PINB7,
	GPIO_ENUM_PINB8,
	GPIO_ENUM_PINB9,
	GPIO_ENUM_PINB10,
	GPIO_ENUM_PINB11,
	GPIO_ENUM_PINB12,
	GPIO_ENUM_PINB13,
	GPIO_ENUM_PINB14,
	GPIO_ENUM_PINB15,
	/* PORT C */
	GPIO_ENUM_PINC13=45,
	GPIO_ENUM_PINC14,
	GPIO_ENUM_PINC15,
	GPIO_ENUM_TOTAL_PINS
}GPIO_EnumPin_type;

/* GPIO PINs Modes ENUM */
typedef enum{
	/* GPIO INPUT options */
	GPIO_ENUM_INPUT_ANALOG =0b0000,
	GPIO_ENUM_INPUT_FLOATING=0b0100,
	GPIO_ENUM_INPUT_PULL_UP_DOWN=0b1000,

	/* GPIO OUTPUT 2 MHz options */
	GPIO_ENUM_OUTPUT_2MHZ_PP=0b0010,
	GPIO_ENUM_OUTPUT_2MHZ_OD=0b0110,
	GPIO_ENUM_OUTPUT_2MHZ_AF_PP=0b1010,
	GPIO_ENUM_OUTPUT_2MHZ_AF_OD=0b1110,

	/* GPIO OUTPUT 10 MHz options */
	GPIO_ENUM_OUTPUT_10MHZ_PP=0b0001,
	GPIO_ENUM_OUTPUT_10MHZ_OD=0b0101,
	GPIO_ENUM_OUTPUT_10MHZ_AF_PP=0b1001,
	GPIO_ENUM_OUTPUT_10MHZ_AF_OD=0b1101,

	/* GPIO OUTPUT 50 MHz options */
	GPIO_ENUM_OUTPUT_50MHZ_PP=0b0011,
	GPIO_ENUM_OUTPUT_50MHZ_OD=0b0111,
	GPIO_ENUM_OUTPUT_50MHZ_AF_PP=0b1011,
	GPIO_ENUM_OUTPUT_50MHZ_AF_OD=0b1111
}GPIO_EnumPinMode_type;

/* GPIO PIN value ENUM */
typedef enum{
	GPIO_ENUM_HIGH=1,
	GPIO_ENUM_LOW=0
}GPIO_EnumPinValue_type;

void GPIO_voidSetPinDirection(GPIO_EnumPin_type Copy_EnumPinID, GPIO_EnumPinMode_type Copy_EnumMode);
void GPIO_voidSetPinValue(GPIO_EnumPin_type Copy_EnumPinID, GPIO_EnumPinValue_type Copy_EnumValue);
u8 GPIO_u8GetPinValue(GPIO_EnumPin_type Copy_EnumPinID);

/* SET PORT DIRECTION */
void GPIO_voidSetPortDirection(GPIO_EnumPort_type Copy_EnumPortID, GPIO_EnumPinMode_type Copy_EnumMode);
/* SET PORT VALUE by writing the given value to the BSRR hence 0 has no effect*/
void GPIO_voidSETPortValue(GPIO_EnumPort_type Copy_EnumPortID, u16 Copy_u16Value);

/* Clear PORT VALUE by writing the given value to the BRR hence 0 has no effect*/
void GPIO_voidCLRPortValue(GPIO_EnumPort_type Copy_EnumPortID, u16 Copy_u16Value);

#endif /* GPIO_INTERFACE_H_ */
